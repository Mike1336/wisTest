{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart/cart-routing.module.ts","webpack:///src/app/cart/cart.module.ts","webpack:///src/app/cart/components/cart/cart.component.ts","webpack:///src/app/cart/components/cart/cart.component.html","webpack:///src/app/cart/components/modal/modal.component.ts","webpack:///src/app/cart/components/modal/modal.component.html","webpack:///src/app/cart/services/cart.service.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/favorites/components/favorites/favorites.component.ts","webpack:///src/app/favorites/components/favorites/favorites.component.html","webpack:///src/app/favorites/components/modal/modal.component.ts","webpack:///src/app/favorites/components/modal/modal.component.html","webpack:///src/app/favorites/favorites-routing.module.ts","webpack:///src/app/favorites/favorites.module.ts","webpack:///src/app/favorites/services/favorites.service.ts","webpack:///src/app/items/components/items/items.component.ts","webpack:///src/app/items/components/items/items.component.html","webpack:///src/app/items/components/modal/modal.component.ts","webpack:///src/app/items/components/modal/modal.component.html","webpack:///src/app/items/items-routing.module.ts","webpack:///src/app/items/items.module.ts","webpack:///src/app/items/services/items.service.ts","webpack:///src/app/layout/components/header/header.component.ts","webpack:///src/app/layout/components/header/header.component.html","webpack:///src/app/layout/layout.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","children","pathMatch","redirectTo","loadChildren","m","ItemsModule","CartModule","FavoritesModule","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","component","CartRoutingModule","forChild","CartComponent","cartService","favoritesService","dialog","_snackBar","list","totalPrice","item","updateTotalPrice","quantity","openDialog","index","update","open","name","duration","check","confirmModal","data","afterClosed","subscribe","result","delFromCart","findIndex","i","splice","ModalComponent","CartService","tprice$","ilist$","push","forEach","next","price","some","providedIn","CoreModule","initializeApp","firebase","FavoritesComponent","delFromFavorites","FavoritesRoutingModule","FavoritesService","ItemsComponent","itemsService","items","cart","favorites","destroy$","itemsObs$","getItems","pipe","favObs$","getList","favList","cartObs$","cartList","complete","img","ItemsRoutingModule","ItemsService","afs","items$","collection","valueChanges","HeaderComponent","tpriceObs$","getTotalPrice","LayoutModule","environment","production","apiKey","authDomain","projectId","storageBucket","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'items',\n      },\n      {\n        path: 'items',\n        loadChildren: () => import('../app/items/items.module').then((m) => m.ItemsModule),\n      },\n      {\n        path: 'cart',\n        loadChildren: () => import('../app/cart/cart.module').then((m) => m.CartModule),\n      },\n      {\n        path: 'favorites',\n        loadChildren: () => import('../app/favorites/favorites.module').then((m) => m.FavoritesModule),\n      },\n    ],\n  },\n  {\n    path: '**',\n    redirectTo: 'items',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public title = 'wisTest';\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\nimport { ItemsModule } from './items/items.module';\nimport { LayoutModule } from './layout/layout.module';\nimport { CartModule } from './cart/cart.module';\nimport { FavoritesModule } from './favorites/favorites.module';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    CoreModule,\n    LayoutModule,\n    ItemsModule,\n    CartModule,\n    FavoritesModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CartComponent } from './components/cart/cart.component';\n\n\nconst routes: Routes = [\n  { path: '', component: CartComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CartRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { CartComponent } from './components/cart/cart.component';\nimport { CartRoutingModule } from './cart-routing.module';\nimport { ModalComponent } from './components/modal/modal.component';\n\n\n@NgModule({\n  declarations: [\n    CartComponent,\n    ModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatDialogModule,\n    CartRoutingModule,\n  ],\n})\nexport class CartModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { CartService } from '../../services/cart.service';\nimport { FavoritesService } from '../../../favorites/services/favorites.service';\nimport { ModalComponent } from '../modal/modal.component';\n\n\n@Component({\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss'],\n})\nexport class CartComponent implements OnInit {\n\n  public list = [];\n  public totalPrice: number = 0;\n  constructor(\n    public cartService: CartService,\n    public favoritesService: FavoritesService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    ) { }\n\n  public ngOnInit(): void {\n    this.list = this.cartService.list;\n    this.totalPrice = this.cartService.totalPrice;\n  }\n  public updateTotalPrice(item: any): void {\n    this.cartService.updateTotalPrice();\n    this.totalPrice = this.cartService.totalPrice;\n    if (item.quantity === 0) {\n      this.openDialog(item);\n    }\n  }\n  public addToFav(item: any): void {\n    const index = this.favoritesService.update(item);\n    if (index >= 0) {\n      this._snackBar.open(`${item.name} was deleted from your favorites`, 'OK', {\n        duration: 2000,\n      });\n    } else {\n      this._snackBar.open(`${item.name} was added to your favorites`, 'OK', {\n        duration: 2000,\n      });\n    }\n  }\n  public checkItemForFav(item: any): boolean { // для отображения иконки товаров из корзины\n    return this.favoritesService.check(item);\n  }\n  public openDialog(item: any): void {\n    const confirmModal = this.dialog.open(ModalComponent, { // отправление данных в компонент модалки после открытия\n      data: {\n        id: item.id,\n        name: item.name,\n      },\n    });\n    confirmModal.afterClosed().subscribe((result) => { // получение данных после закрытия\n      if(result){\n        this.delFromCart(result.id, result.name);\n      } else {\n        item.quantity = 1;\n        this.updateTotalPrice(item);\n      }\n    });\n  }\n  public delFromCart(id: number, name: string): void {\n    const index = this.cartService.list.findIndex((i) => {\n      return i.id === id;\n    });\n    this.cartService.list.splice(index,1);\n    this._snackBar.open(`${name} successfully deleted from your cart`, 'OK', {\n      duration: 2000,\n    });\n  }\n\n}\n","<ng-container *ngIf=\"list.length > 0; else emptyCart\">\n  <h1 id=\"cartHeader\" >Cart items:</h1>\n\n  <div id=\"cartList\">\n    <mat-card *ngFor=\"let item of list\">\n      <mat-card-header>\n        <button mat-icon-button *ngIf=\"checkItemForFav(item); else notInCart\" class=\"example-icon addCart\" (click)=\"addToFav(item)\">\n          <mat-icon color=\"warn\">favorite</mat-icon>\n        </button>\n        <ng-template #notInCart>\n          <button mat-icon-button  class=\"example-icon addCart\" (click)=\"addToFav(item)\">\n            <mat-icon>favorite</mat-icon>\n          </button>\n        </ng-template>\n        <button mat-icon-button  class=\"example-icon favorite-icon\" (click)=\"openDialog(item)\" >\n          <mat-icon>delete_sweep</mat-icon>\n        </button>\n      </mat-card-header>\n        <img mat-card-image src=\"{{item.img}}\">\n      <div id=\"itemInfo\">\n        <p class=\"itemName\">{{item.name}}</p>\n        <p class=\"itemPrice\"><strong>{{item.price}} ₽</strong></p>\n        <mat-form-field class=\"example-full-width\" >\n          <mat-label>Quantity</mat-label>\n          <input type=\"number\" min ='0' max=\"10\" matInput  [(ngModel)]=\"item.quantity\" (ngModelChange)=\"updateTotalPrice(item)\">\n        </mat-form-field>\n      </div>\n  </mat-card>\n  </div>\n  <h2>Total price is {{totalPrice}} ₽</h2>\n</ng-container>\n\n<ng-template #emptyCart>\n  <h1>Cart is empty</h1>\n  <div class=\"button-container\">\n      <button routerLink = '/' mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n        <mat-icon>add</mat-icon>\n      </button>\n    </div>\n</ng-template>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {\n    id: number,\n    name: string\n  }) {}\n\n  ngOnInit(): void {\n  }\n  close(){\n    return {\n      id: this.data.id,\n      name: this.data.name\n    }\n  }\n\n}\n","<div id=\"topModal\">\n    <h1 mat-dialog-title>Confirming delete </h1>\n    <mat-icon [mat-dialog-close]=\"false\"> clear</mat-icon>\n</div>\n<div mat-dialog-content>Are you sure want to delete {{data.name}} from your cart?</div>\n<div mat-dialog-actions>\n<button mat-button color=\"warn\" [mat-dialog-close]=\"close()\">Yes</button>\n</div>","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { Item } from '../../items/interfaces/item';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n\n  public list = [];\n  public totalPrice: number = 0;\n\n  private tprice$ = new BehaviorSubject(this.totalPrice);\n  private ilist$ = new BehaviorSubject(this.list);\n\n  public getTotalPrice(): Observable<number> {\n    return this.tprice$;\n  }\n  public getList(): Observable<any[]> {\n    return this.ilist$;\n  }\n\n  public update(item: any): number { // adding or deleting item\n    const index = this.list.findIndex((i: Item) => {\n      return i.id === item.id;\n    });\n    if (index >= 0) {\n      delete item.quantity;\n      this.list.splice(index, 1);\n      this.updateTotalPrice();\n    } else {\n      item.quantity = 1;\n      this.list.push(item);\n      this.updateTotalPrice();\n    }\n\n    return index;\n  }\n\n  public updateTotalPrice(): void {\n    this.totalPrice = 0;\n    this.list.forEach((item) => {\n      this.tprice$.next(this.totalPrice += item.price * item.quantity);\n    });\n  }\n\n  public check(item: Item): boolean {\n    return this.list.some((i: Item) => {\n      return i.id === item.id;\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\n\nimport { environment } from '../../environments/environment';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    AngularFireStorageModule,\n    AngularFireModule.initializeApp(environment.firebase),\n  ],\n  providers: [AngularFirestore],\n})\nexport class CoreModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { FavoritesService } from '../../services/favorites.service';\nimport { CartService } from '../../../cart/services/cart.service';\nimport { Item } from '../../../items/interfaces/item';\nimport { ModalComponent } from '../modal/modal.component';\n\n@Component({\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n\n  public list: Item[] = [];\n  constructor(\n    private favoritesService: FavoritesService,\n    public cartService: CartService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar) { }\n\n  public ngOnInit(): void {\n    this.list = this.favoritesService.list;\n  }\n  public openDialog(item: Item): void {\n    const confirmModal = this.dialog.open(ModalComponent, { // отправление данных в компонент модалки после открытия\n      data: {\n        id: item.id,\n        name: item.name,\n      }\n    });\n    confirmModal.afterClosed().subscribe((result) => { // получение данных после закрытия\n      if(result){\n        this.delFromFavorites(result.id, result.name);\n      }\n    });\n  }\n  public delFromFavorites(id: number, name: string): void {\n    const index = this.favoritesService.list.findIndex((i) => {\n      return i.id === id;\n    });\n    this.favoritesService.list.splice(index,1);\n    this._snackBar.open(`${name} was deleted from your favorites`, 'OK', {\n      duration: 2000,\n    });\n  }\n  public addToCart(item: Item): void{\n    const index  = this.cartService.update(item);\n    if (index >= 0) {\n      this._snackBar.open(`${item.name} successfully deleted from your cart`, 'OK', {\n        duration: 2000,\n      });\n    } else {\n      this._snackBar.open(`${item.name} successfully added to your cart`, 'OK', {\n        duration: 2000,\n      });\n    }\n  }\n  public checkItemForCart(item: Item): boolean{ // для отображения иконки товаров из корзины\n    return this.cartService.check(item);\n  }\n}\n","<h1 *ngIf=\"list.length > 0; else emptyFavorites\">Your favorite phones:</h1>\n<ng-template #emptyFavorites> \n    <h1>Favorite list is empty :[</h1> \n    <div class=\"button-container\">\n        <button routerLink = '/' mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n</ng-template>\n<div id=\"favorites\">\n    <mat-card *ngFor=\"let item of list\">\n        <mat-card-header>\n          <button mat-icon-button *ngIf=\"checkItemForCart(item); else notInCart\" class=\"example-icon addCart\" (click)=\"addToCart(item)\">\n            <mat-icon color=\"warn\">remove_shopping_cart</mat-icon>\n          </button>\n          <ng-template #notInCart>\n            <button mat-icon-button  class=\"example-icon addCart\" (click)=\"addToCart(item)\">\n              <mat-icon>add_shopping_cart</mat-icon>\n            </button>\n          </ng-template>\n          <button mat-icon-button  class=\"example-icon favorite-icon\" (click)=\"openDialog(item)\" >\n            <mat-icon>delete_sweep</mat-icon>\n          </button>\n        </mat-card-header>\n        <img src=\"{{item.img}}\">\n        <p><strong>{{item.name}}</strong></p>\n        <p>{{item.price}} ₽</p>\n    </mat-card>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss'],\n})\nexport class ModalComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      id: number;\n      name: string;\n    },\n  ) {}\n\n  public ngOnInit(): void {\n  }\n  public close(): object {\n    return {\n      id: this.data.id,\n      name: this.data.name,\n    };\n  }\n\n}\n\n","    <div id=\"topModal\">\n        <h1 mat-dialog-title>Confirming delete </h1>\n        <mat-icon [mat-dialog-close]=\"\"> clear</mat-icon>\n    </div>\n    <div mat-dialog-content>Are you sure want to delete {{data.name}} from favorites?</div>\n    <div mat-dialog-actions>\n    <button mat-button color=\"warn\" [mat-dialog-close]=\"close()\">Yes</button>\n    </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FavoritesComponent } from './components/favorites/favorites.component';\n\n\nconst routes: Routes = [\n        { path: '', component: FavoritesComponent },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FavoritesRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { FavoritesRoutingModule } from './favorites-routing.module';\nimport { ModalComponent } from './components/modal/modal.component';\n\n\n@NgModule({\n  declarations: [\n    FavoritesComponent,\n    ModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    FavoritesRoutingModule,\n  ],\n})\nexport class FavoritesModule { }\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { Item } from '../../items/interfaces/item';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FavoritesService {\n\n  public list: Item[] = [];\n  private ilist$ = new BehaviorSubject(this.list);\n\n  constructor() { }\n\n  public getList(): Observable<Item[]> {\n    return this.ilist$;\n  }\n\n  public update(item: Item): number {\n    const index = this.list.findIndex((i: Item) => {\n      return i.id === item.id;\n    });\n    if (index >= 0) {\n      this.list.splice(index, 1);\n    } else {\n      this.list.push(item);\n    }\n\n    return index;\n  }\n\n  public check(item: Item): boolean {\n    return this.list.some((i: Item) => {\n      return i.id === item.id;\n    });\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { ItemsService } from '../../services/items.service';\nimport { CartService } from '../../../cart/services/cart.service';\nimport { FavoritesService } from '../../../favorites/services/favorites.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { Item } from '../../interfaces/item';\n\n\n@Component({\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.scss'],\n})\nexport class ItemsComponent implements OnInit, OnDestroy {\n\n  public items: Item[] = [];\n  public cart: Item[] = [];\n  public favorites: Item[] = [];\n\n  private itemsObs$ : Observable<Item[]>;\n  private favObs$ : Observable<Item[]>;\n  private cartObs$: Observable<any[]>;\n\n  private destroy$: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  constructor(\n    private itemsService: ItemsService,\n    private favoritesService: FavoritesService,\n    private cartService: CartService,\n    private _snackBar: MatSnackBar,\n    public dialog: MatDialog) { }\n\n  public ngOnInit(): void {\n    this.itemsObs$ = this.itemsService.getItems();\n    this.itemsObs$\n      .pipe(takeUntil(this.destroy$)) // for unsubscribe\n      .subscribe((items) => this.items = items); // giving data\n\n    this.favObs$ = this.favoritesService.getList();\n    this.favObs$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((favList) => {\n        this.favorites = favList;\n      });\n    this.cartObs$ = this.cartService.getList();\n    this.cartObs$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((cartList) => {\n        this.cart = cartList;\n      });\n  }\n  public ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public addToFavotire(item: Item): void {\n    const index = this.favoritesService.update(item);\n    if (index >= 0) {\n      this._snackBar.open(`${item.name} was deleted from your favorites`, 'OK', {\n        duration: 2000,\n      });\n    } else {\n      this._snackBar.open(`${item.name} was added to your favorites`, 'OK', {\n        duration: 2000,\n      });\n    }\n  }\n\n  public addToCart(item: Item): void {\n    const index = this.cartService.update(item);\n    if (index >= 0) {\n      this._snackBar.open(`${item.name} successfully deleted from your cart`, 'OK', {\n        duration: 2000,\n      });\n    } else {\n      this._snackBar.open(`${item.name} successfully added to your cart`, 'OK', {\n        duration: 2000,\n      });\n    }\n  }\n\n  public checkItemForFavorite(item: Item): boolean { // для отображения иконки избранных товаров\n    return this.favoritesService.check(item);\n  }\n\n  public checkItemForCart(item: Item): boolean { // для отображения иконки товаров из корзины\n    return this.cartService.check(item);\n  }\n\n  public openDialog(item: Item): void {\n    this.dialog.open(ModalComponent, { // отправление данных в компонент модалки после открытия\n      data: {\n        id: item.id,\n        img: item.img,\n        name: item.name,\n        price: item.price,\n      },\n    });\n  }\n}\n","    <div id=\"items\">\n      <ng-container *ngFor=\"let i of items\">\n        <mat-card class=\"example-card fixwidth\">\n          <mat-card-header>\n            <button mat-icon-button [ngClass]=\"{'favorite': checkItemForFavorite(i)}\" class=\"example-icon favorite-icon favright\" (click)=\"addToFavotire(i)\" aria-label=\"Example icon-button with heart icon\">\n              <mat-icon>favorite</mat-icon>\n            </button>\n            <mat-card-title (click)=\"openDialog(i)\">{{i.name}}</mat-card-title>\n            <mat-card-subtitle (click)=\"openDialog(i)\"><strong>{{i.price}} ₽</strong></mat-card-subtitle>\n          </mat-card-header>\n          <img (click)=\"openDialog(i)\" mat-card-image src={{i.img}} alt=\"Photo of a Shiba Inu\">\n          <mat-card-content (click)=\"openDialog(i)\">\n          </mat-card-content>\n          <mat-card-actions>\n            <button mat-stroked-button color=\"warn\" *ngIf=\"checkItemForCart(i); else isNotInCart\" (click)=\"addToCart(i)\">DELETE FROM CART</button>\n            <ng-template #isNotInCart>\n              <button mat-button (click)=\"addToCart(i)\">ADD TO CART</button>\n            </ng-template>\n          </mat-card-actions>\n        </mat-card>\n      </ng-container>\n     \n    </div>\n\n\n\n\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { FavoritesService } from '../../../favorites/services/favorites.service';\nimport { CartService } from '../../../cart/services/cart.service';\nimport { Item } from '../../interfaces/item';\n\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss'],\n})\nexport class ModalComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: Item,\n    private favoritesService: FavoritesService,\n    private cartService: CartService,\n    private _snackBar: MatSnackBar,\n  ) {}\n\n  public ngOnInit(): void {\n  }\n\n  public addToFavotire(item: Item): void {\n    const index = this.favoritesService.update(item);\n    if (index >= 0) {\n      this._snackBar.open(`${item.name} was deleted from your favorites`, 'OK', {\n        duration: 2000,\n      });\n    } else {\n      this._snackBar.open(`${item.name} was added to your favorites`, 'OK', {\n        duration: 2000,\n      });\n    }\n  }\n  public addToCart(item: Item): void {\n    const index = this.cartService.update(item);\n    if (index >= 0) {\n      this._snackBar.open(`${item.name} successfully deleted from your cart`, 'OK', {\n        duration: 2000,\n      });\n    } else {\n      this._snackBar.open(`${item.name} successfully added to your cart`, 'OK', {\n        duration: 2000,\n      });\n    }\n  }\n  public checkFavorite(item: Item): boolean { // для отображения иконки избранных товаров\n    const index = this.favoritesService.list.findIndex((i: Item) => {\n      return i.id === item.id;\n    });\n\n    return index >= 0;\n  }\n  public checkCart(item: Item): boolean { // для отображения иконки избранных товаров\n    const index = this.cartService.list.findIndex((i: Item) => {\n      return i.id === item.id;\n    });\n\n    return index >= 0;\n  }\n\n}\n","<div id=\"modalHeader\">\n    <h1 mat-dialog-title>Phone details </h1>\n    <mat-icon mat-dialog-close> clear</mat-icon>\n</div>\n<div mat-dialog-content>\n    <div id=\"topContent\">\n        <img src=\"{{data.img}}\">\n        <p>\n            The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n            A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n            bred for hunting.\n        </p>\n    </div>\n    <h2><strong>{{data.name}}</strong></h2>\n    <h2>{{data.price}} ₽</h2>\n</div>\n<div id=\"modalBottom\" mat-dialog-actions>\n<button mat-stroked-button *ngIf=\"!checkCart(data); else noCart\" (click)=\"addToCart(data)\"><mat-icon>add_shopping_cart</mat-icon>ADD TO CART</button>\n<ng-template #noCart>\n    <button mat-stroked-button color=\"warn\" (click)=\"addToCart(data)\"><mat-icon color=\"warn\">shopping_cart</mat-icon>IN YOUR CART</button>\n</ng-template>\n\n<button mat-stroked-button *ngIf=\"!checkFavorite(data); else noFav\" (click)=\"addToFavotire(data)\"><mat-icon>favorite_border</mat-icon>SAVE</button>\n<ng-template #noFav>\n    <button mat-stroked-button color=\"warn\" (click)=\"addToFavotire(data)\"><mat-icon color=\"warn\">favorite</mat-icon>SAVED</button>\n</ng-template>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ItemsComponent } from './components/items/items.component';\n\n\nconst routes: Routes = [\n    { path: '', pathMatch: 'full', component: ItemsComponent },\n    { path: 'items', component: ItemsComponent },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n    export class ItemsRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { ItemsComponent } from './components/items/items.component';\nimport { ItemsRoutingModule } from './items-routing.module';\nimport { ModalComponent } from './components/modal/modal.component';\n\n\n@NgModule({\n  declarations: [\n    ItemsComponent,\n    ModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    ItemsRoutingModule,\n  ],\n})\nexport class ItemsModule {\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { AngularFirestore } from 'angularfire2/firestore';\n\nimport { Item } from '../interfaces/item';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemsService {\n\n  public items$: Observable<Item[]>;\n\n  constructor(public afs: AngularFirestore) {\n    this.items$ = this.afs.collection<Item>('phones').valueChanges();\n  }\n\n  public getItems(): Observable<Item[]> {\n    return this.items$;\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FavoritesService } from '../../../favorites/services/favorites.service';\nimport { CartService } from '../../../cart/services/cart.service';\nimport { Item } from '../../../items/interfaces/item';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  public favList: Item[] = [];\n  public cartList: any[] = [];\n  public totalPrice: number = 0;\n\n  private favObs$ : Observable<Item[]>;\n  private cartObs$: Observable<any[]>;\n  private tpriceObs$: Observable<number>;\n\n  private destroy$: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  constructor(\n    private favoritesService: FavoritesService,\n    private cartService: CartService,\n    private _snackBar: MatSnackBar,\n  ) { }\n\n  public ngOnInit(): void {\n    this.favObs$ = this.favoritesService.getList();\n    this.favObs$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((favList) => {\n        this.favList = favList;\n      });\n    this.cartObs$ = this.cartService.getList();\n    this.cartObs$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((cartList) => {\n        this.cartList = cartList;\n      });\n    this.tpriceObs$ = this.cartService.getTotalPrice();\n    this.tpriceObs$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((totalPrice) => {\n        this.totalPrice = totalPrice;\n      });\n  }\n  public ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n  public updateTotalPrice(): void {\n    this.cartService.updateTotalPrice();\n  }\n\n  public delFromFavorites(item: Item): void {\n    this.favoritesService.update(item);\n    this._snackBar.open(`${item.name} was deleted from your favorites`, 'OK', {\n      duration: 2000,\n    });\n  }\n  public delFromCart(item: Item): void {\n    this.cartService.update(item);\n    this._snackBar.open(`${item.name} successfully deleted from your cart`, 'OK', {\n      duration: 2000,\n    });\n  }\n\n}\n","<mat-toolbar>\n    <a routerLink=\"/\">\n      <span>Phone-Shop</span>\n    </a>\n    <span class=\"example-spacer\"></span>\n    <div id='pages'>\n      <button mat-icon-button [matMenuTriggerFor]=\"shortFav\" class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n        <mat-icon *ngIf=\"favList.length > 0; else simpleFavIcon\" matBadge=\"{{favList.length}}\" matBadgeColor=\"warn\">favorite</mat-icon>\n          <ng-template #simpleFavIcon>\n            <mat-icon>favorite</mat-icon>\n          </ng-template>\n      </button>\n      <mat-menu #shortFav=\"matMenu\">\n        <div class=\"shortMenu\" *ngIf=\"favList.length > 0; else emptyFav\">\n          <div *ngFor=\"let item of favList\">\n            <img [src]=\"item.img\">\n            <span>{{item.name}}</span>\n            <button mat-icon-button (click)=\"delFromFavorites(item)\">\n              <mat-icon>delete</mat-icon>\n            </button> \n          </div>\n        </div>\n      <ng-template #emptyFav>\n        <button mat-menu-item >\n          <span>Favorites list is empty :(</span>\n        </button>\n      </ng-template>  \n        <button mat-menu-item>\n          <a routerLink=\"favorites\">\n          <mat-icon>favorite</mat-icon>\n          <span>Link to the page</span>\n          </a>\n        </button>\n      </mat-menu>\n    \n      <button mat-icon-button [matMenuTriggerFor]=\"shortCart\" class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n        <mat-icon *ngIf=\"cartList.length > 0; else simpleCartIcon\" matBadge=\"{{cartList.length}}\" matBadgeColor=\"warn\">shopping_cart</mat-icon>\n        <ng-template #simpleCartIcon>\n          <mat-icon>shopping_cart</mat-icon>\n        </ng-template>\n      </button>\n      \n      <mat-menu #shortCart=\"matMenu\">\n        <div class=\"shortMenu\" *ngIf=\"cartList.length > 0; else emptyCart\">\n          <div *ngFor=\"let item of cartList\" >\n            <img src=\"{{item.img}}\">\n            <span>{{item.name}}</span>\n            <div>\n              <mat-form-field class=\"example-full-width\" >\n                <mat-label>Quantity</mat-label>\n                <input type=\"number\" matInput  [(ngModel)]=\"item.quantity\" (ngModelChange)=\"updateTotalPrice()\">\n              </mat-form-field>\n              <button mat-icon-button (click)=\"delFromCart(item)\">\n                <mat-icon>delete</mat-icon>\n              </button> \n            </div>\n          </div>\n          <h4><strong>Total price: {{totalPrice}} ₽</strong></h4>\n        </div>\n        <ng-template #emptyCart>\n          <button mat-menu-item >\n            <span>Cart is empty :(</span>\n          </button>\n        </ng-template>    \n        <button mat-menu-item>\n          <a routerLink=\"cart\">\n          <mat-icon>shopping_cart</mat-icon>\n          <span>Link to the page</span>\n        </a>\n        </button>\n      </mat-menu>\n    </div>\n    \n  </mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { HeaderComponent } from './components/header/header.component';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatIconModule,\n    RouterModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatBadgeModule,\n    MatInputModule,\n  ],\n  exports: [\n    HeaderComponent,\n  ],\n})\nexport class LayoutModule {\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBfY5iOkrcNOkhOfaQQUBJsS52VpXJr3oA',\n    authDomain: 'myfirstproject-2211.firebaseapp.com',\n    projectId: 'myfirstproject-2211',\n    storageBucket: 'myfirstproject-2211.appspot.com',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}